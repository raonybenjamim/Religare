name: Build and Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64]

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.22' # Specify the Go version you need

      - name: Build the binary
        run: |
          mkdir -p dist/${{ matrix.goos }}_${{ matrix.goarch }}
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/${{ matrix.goos }}_${{ matrix.goarch }}/religare

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.goos }}_${{ matrix.goarch }}_binary
          path: dist/${{ matrix.goos }}_${{ matrix.goarch }}

  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux_amd64_binary
          path: dist/linux_amd64/
          
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows_amd64_binary
          path: dist/windows_amd64/

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/linux_amd64/religare
          asset_name: religare-linux
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/windows_amd64/religare.exe
          asset_name: religare-windows.exe
          asset_content_type: application/octet-stream
